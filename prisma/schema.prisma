generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Trainer {
  id            Int        @id @default(autoincrement())
  name          String
  login         String     @unique
  password      String
  birth         DateTime
  roles         Role[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  deletedAt     DateTime?
  pokemons      Pokemon[]
  sentTrades    Trade[]   @relation("sentTrades")
  receiveTrades Trade[]   @relation("receiveTrades")
	@@map("Trainers")
}

model Pokemon {
  id        Int                @id @default(autoincrement())
  species   String
  name      String?
  type      String
  level     Int
  weight    Float
  height    Float
  chromatic Boolean
  trainerId Int
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  deletedAt DateTime?
  tradesId  Int?
  sex       Sex
  trainer   Trainer           @relation(fields: [trainerId], references: [id])
  Trades    TradesOnPokemons[]
	@@map("Pokemons")
}

model Trade {
  id          Int                @id @default(autoincrement())
  status      TradeStatus
  recipientId Int?
  authorId    Int?
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  deletedAt   DateTime?
  author      Trainer?          @relation("sentTrades", fields: [authorId], references: [id])
  recipient   Trainer?          @relation("receiveTrades", fields: [recipientId], references: [id])
  pokemons    TradesOnPokemons[]
	@@map("Trades")
}

model TradesOnPokemons {
  tradeId   Int
  pokemonId Int
  sent      Boolean
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  pokemon   Pokemon  @relation(fields: [pokemonId], references: [id])
  trade     Trade    @relation(fields: [tradeId], references: [id])

  @@id([tradeId, pokemonId])
}

model Log {
  id        Int       @id @default(autoincrement())
  message   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
	@@map("Logs")
}

enum Role {
  ADMIN
  TRAINER
}

enum Sex {
  MALE
  FEMALE
  UNDEFINED
}

enum TradeStatus {
  PENDING
  ACCEPTED
  REFUSED
}
